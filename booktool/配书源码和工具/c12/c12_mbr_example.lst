     1                                      ;代码清单12-1
     2                                      ;文件名：ex12-1.asm
     3                                      ;文件说明：硬盘主引导扇区代码  参考 https://www.jianshu.com/p/34c0d3e350c3  https://blog.csdn.net/longintchar/article/details/50878960
     4                                      ;创建日期：16:23 2018/5/30
     5                                  
     6                                  ;---------------------------------------------------------------    
     7                                  ;定义常量
     8                                  ;---------------------------------------------------------------    
     9                                      MEMORY_START equ 0x100000           ;要检测的内存起始地址
    10                                      MEMORY_END   equ 0x500000           ;要检测的内存结束地址
    11                                      MEMORY_SIZE  equ (MEMORY_END-MEMORY_START)/4    ;以双字位单元
    12                                  ;---------------------------------------------------------------    
    13                                      
    14                                      ;设置堆栈段和栈指针
    15 00000000 668CC8                      mov eax,cs
    16 00000003 8ED0                        mov ss,eax
    17 00000005 BC007C                      mov sp,0x7c00
    18                                      
    19                                      ;计算GDT所在的逻辑段地址
    20 00000008 2E66A1[E47D]                mov eax,[cs:pdgt+0x7c00+0x02]   ;GDT的32位线性基地址
    21 0000000D 6631D2                      xor edx,edx
    22 00000010 66BB10000000                mov ebx,16
    23 00000016 66F7F3                      div ebx                         ;分解成16位逻辑地址
    24                                      
    25 00000019 8ED8                        mov ds,eax          ;令DS指向该段以进行操作：EAX低16位有效 DS=0x7e00
    26 0000001B 6689D3                      mov ebx,edx         ;段内起始偏移地址：EDX EBX低16位有效 ebx=0x0000
    27                                      
    28                                      ;创建0#描述符,它是空描述符,这是处理器的要求
    29 0000001E 6667C70300000000            mov dword [ebx+0x00],0x00000000
    30 00000026 6667C7430400000000          mov dword [ebx+0x04],0x00000000
    31                                      
    32                                      ;创建1#描述符，这是一个数据段，对应0~4GB的线性地址空间
    33 0000002F 6667C74308FFFF0000          mov dword [ebx+0x08],0x0000ffff     ;段基地址0x00000000
    34 00000038 6667C7430C0092CF00          mov dword [ebx+0x0c],0x00cf9200
    35                                      
    36                                      ;创建2#描述符，这是一个只执行的代码段
    37 00000041 6667C74310FF01007C          mov dword [ebx+0x10],0x7c0001ff     ;段基地址0x00007C00
    38 0000004A 6667C7431400984000          mov dword [ebx+0x14],0x00409800
    39                                      
    40                                      ;创建3#描述符，这是上面代码段的别名
    41 00000053 6667C74318FF01007C          mov dword [ebx+0x18],0x7c0001ff     ;段基地址0x00007C00
    42 0000005C 6667C7431C00924000          mov dword [ebx+0x1c],0x00409200
    43                                      
    44                                      ;创建4#描述符，这是栈段
    45 00000065 6667C74320FEFF007C          mov dword [ebx+0x20],0x7c00fffe     ;段基地址0x00007C00
    46 0000006E 6667C743240096CF00          mov dword [ebx+0x24],0x00cf9600
    47                                      
    48                                      ;初始化描述符寄存器GDTR
    49 00000077 2EC706[E27D]2700            mov word [cs:pdgt+0x7c00],39        ;5*8-1=39
    50 0000007E 2E0F0116[E27D]              lgdt [cs:pdgt+0x7c00]
    51                                      
    52 00000084 E492                        in al,0x92                          ;南桥芯片的端口
    53 00000086 0C02                        or al,0000_0010B
    54 00000088 E692                        out 0x92,al                         ;打开A20
    55                                      
    56 0000008A FA                          cli
    57                                      
    58 0000008B 0F20C0                      mov eax,cr0
    59 0000008E 6683C801                    or eax,1
    60 00000092 0F22C0                      mov cr0,eax                         ;设置PE位
    61                                      
    62                                      ;以下进入保护模式... ...
    63 00000095 66EA[9D000000]1000          jmp dword 0x0010:flush
    64                                      
    65                                      [bits 32]
    66                                  flush:
    67 0000009D B818000000                  mov eax,0x0018      ;索引号3#
    68 000000A2 8ED8                        mov ds,eax      
    69                                      
    70 000000A4 B808000000                  mov eax,0x0008      ;索引号1#
    71 000000A9 8EC0                        mov es,eax
    72 000000AB 8EE0                        mov fs,eax
    73 000000AD 8EE8                        mov gs,eax
    74                                      
    75 000000AF B820000000                  mov eax,0x0020      ;索引号4#
    76 000000B4 8ED0                        mov ss,eax
    77 000000B6 31E4                        xor esp,esp         ;ESP=0
    78                                      
    79 000000B8 26C70500800B005007-         mov dword [es:0x0b8000],0x072e0750  ;'P.'
    79 000000C1 2E07               
    80 000000C3 26C70504800B004D07-         mov dword [es:0x0b8004],0x072e074d  ;'M.'
    80 000000CC 2E07               
    81 000000CE 26C70508800B002007-         mov dword [es:0x0b8008],0x07200720  ;'  '
    81 000000D7 2007               
    82 000000D9 26C7050C800B006F07-         mov dword [es:0x0b800c],0x076b076f  ;'ok'
    82 000000E2 6B07               
    83                                  
    84                                      
    85                                  ;---------------------------------------------------------------    
    86                                  ;显示需要检测的总的单元个数
    87                                  ;---------------------------------------------------------------        
    88 000000E4 26C60540810B0048            mov byte [es:0x0b8140],'H'
    89 000000EC 26C60542810B0045            mov byte [es:0x0b8142],'E'
    90 000000F4 26C60544810B0058            mov byte [es:0x0b8144],'X'
    91 000000FC 26C60546810B003A            mov byte [es:0x0b8146],':'
    92                                      
    93 00000104 BD4A810B00                  mov ebp,0x0b8140+10
    94 00000109 B900000000                  mov ecx,0
    95 0000010E E86F000000                  call check
    96                                      
    97 00000113 26C6055E810B002F            mov byte [es:0x0b8140+30],'/'
    98                                      
    99 0000011B BD62810B00                  mov ebp,0x0b8140+34
   100 00000120 B900001000                  mov ecx,MEMORY_SIZE
   101 00000125 E858000000                  call check
   102                                  	 
   103                                  ;---------------------------------------------------------------        
   104                                  ;内存检测
   105                                  ;以双字为单元，使用花码0x55aa55aa和0xaa55aa55进行内存检测
   106                                  ;---------------------------------------------------------------        
   107                                          
   108 0000012A 31C9                            xor ecx,ecx                 ;检测的单元个数
   109 0000012C BB00001000                      mov ebx,MEMORY_START        ;检测的起始地址
   110                                  	   
   111                                  exam:   
   112 00000131 26C703AA55AA55                  mov dword [es:ebx],0x55aa55aa
   113 00000138 26813BAA55AA55                  cmp dword [es:ebx],0x55aa55aa
   114 0000013F 7540                            jnz err
   115                                          
   116 00000141 26C70355AA55AA                  mov dword [es:ebx],0xaa55aa55
   117 00000148 26813B55AA55AA                  cmp dword [es:ebx],0xaa55aa55
   118 0000014F 7530                            jnz err
   119                                  
   120 00000151 83C304                          add ebx,4
   121 00000154 41                              inc ecx
   122 00000155 26C605BC800B0021                mov byte  [es:0x0b80a0+28],'!'
   123 0000015D 26F615BD800B00                  not byte  [es:0x0b80a0+29]
   124                                          
   125                                          
   126 00000164 BD4A810B00                      mov ebp,0x0b8140+10
   127 00000169 E814000000                      call check
   128                                          
   129 0000016E 81FB00005000                    cmp ebx,MEMORY_END
   130 00000174 75BB                            jnz exam
   131                                          
   132 00000176 26C705C4800B006F07-             mov dword [es:0x0b80b0+20],0x076b076f       ;'ok'
   132 0000017F 6B07               
   133                                          
   134                                  ;---------------------------------------------------------------        
   135                                  err:
   136 00000181 F4                              hlt                         ;进入停机状态
   137                                  
   138                                          
   139                                  ;---------------------------------------------------------------
   140                                  ;子程序：check
   141                                  ;参数：    
   142                                  ;       ecx = 要显示的数值
   143                                  ;       ebp = 数值在显存的起始位置
   144                                  ;功能：    计算并显示检测的内存个数(以双字位单位)
   145                                  ;---------------------------------------------------------------
   146 00000182 53                      check:          push ebx
   147 00000183 51                                      push ecx
   148 00000184 56                                      push esi
   149 00000185 50                                      push eax
   150 00000186 55                                      push ebp
   151                                                  
   152 00000187 89C8                                    mov eax,ecx
   153 00000189 31DB                                    xor ebx,ebx
   154 0000018B B908000000                              mov ecx,8
   155 00000190 BE10000000                              mov esi,16
   156                                          digit:  
   157 00000195 31D2                                    xor edx,edx
   158 00000197 F7F6                                    div esi
   159 00000199 8893[CA010000]                          mov [mem+ebx],dl ; 这个好像在在转成十六进制
   160 0000019F 43                                      inc ebx
   161 000001A0 E2F3                                    loop digit
   162                                                  
   163                                                  
   164 000001A2 31FF                                    xor edi,edi
   165 000001A4 31DB                                    xor ebx,ebx
   166 000001A6 BE07000000                              mov esi,7
   167                                          show:   
   168 000001AB 8A86[CA010000]                          mov al,[mem+esi]
   169 000001B1 88C3                                    mov bl,al
   170 000001B3 8A83[D2010000]                          mov al,[number+ebx]
   171 000001B9 2688443D00                              mov [es:ebp+edi],al
   172 000001BE 83C702                                  add edi,2
   173 000001C1 4E                                      dec esi
   174 000001C2 79E7                                    jns show
   175                                          
   176 000001C4 5D                                      pop ebp
   177 000001C5 58                                      pop eax
   178 000001C6 5E                                      pop esi
   179 000001C7 59                                      pop ecx
   180 000001C8 5B                                      pop ebx
   181                                          
   182 000001C9 C3                      ret
   183                                  ;---------------------------------------------------------------
   184 000001CA 0000000000000000            mem     db  0,0,0,0,0,0,0,0     ;存放数位
   185 000001D2 303132333435363738-         number  db '0123456789ABCDEF'
   185 000001DB 39414243444546     
   186                                  ;---------------------------------------------------------------
   187 000001E2 0000                        pdgt    dw  0
   188 000001E4 007E0000                            dd  0x00007e00          ;GDT的物理地址
   189                                  ;---------------------------------------------------------------
   190 000001E8 00<rep 16h>                 times 510-($-$$) db 0
   191 000001FE 55AA                                         db 0x55,0xaa
